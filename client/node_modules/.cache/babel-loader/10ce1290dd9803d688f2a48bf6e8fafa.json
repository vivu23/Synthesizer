{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'explicit',\n  channelInterpretation: 'speakers'\n};\nexport var createMediaStreamAudioDestinationNodeConstructor = function createMediaStreamAudioDestinationNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext) {\n  return /*#__PURE__*/function (_audioNodeConstructor) {\n    _inherits(MediaStreamAudioDestinationNode, _audioNodeConstructor);\n\n    function MediaStreamAudioDestinationNode(context, options) {\n      var _this;\n\n      _classCallCheck(this, MediaStreamAudioDestinationNode);\n\n      var nativeContext = getNativeContext(context); // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.\n\n      if (isNativeOfflineAudioContext(nativeContext)) {\n        throw new TypeError();\n      }\n\n      var mergedOptions = _objectSpread({}, DEFAULT_OPTIONS, options);\n\n      var nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(MediaStreamAudioDestinationNode).call(this, context, false, nativeMediaStreamAudioDestinationNode, null));\n      _this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n      return _this;\n    }\n\n    _createClass(MediaStreamAudioDestinationNode, [{\n      key: \"stream\",\n      get: function get() {\n        return this._nativeMediaStreamAudioDestinationNode.stream;\n      }\n    }]);\n\n    return MediaStreamAudioDestinationNode;\n  }(audioNodeConstructor);\n};","map":null,"metadata":{},"sourceType":"module"}