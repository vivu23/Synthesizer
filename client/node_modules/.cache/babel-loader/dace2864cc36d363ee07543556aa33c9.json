{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nexport var createAudioDestinationNodeRenderer = function createAudioDestinationNodeRenderer(renderInputsOfAudioNode) {\n  var renderedNativeAudioDestinationNodes = new WeakMap();\n\n  var createAudioDestinationNode = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(proxy, nativeOfflineAudioContext) {\n      var nativeAudioDestinationNode;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n              renderedNativeAudioDestinationNodes.set(nativeOfflineAudioContext, nativeAudioDestinationNode);\n              _context.next = 4;\n              return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode);\n\n            case 4:\n              return _context.abrupt(\"return\", nativeAudioDestinationNode);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function createAudioDestinationNode(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return {\n    render: function render(proxy, nativeOfflineAudioContext) {\n      var renderedNativeAudioDestinationNode = renderedNativeAudioDestinationNodes.get(nativeOfflineAudioContext);\n\n      if (renderedNativeAudioDestinationNode !== undefined) {\n        return Promise.resolve(renderedNativeAudioDestinationNode);\n      }\n\n      return createAudioDestinationNode(proxy, nativeOfflineAudioContext);\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"module"}