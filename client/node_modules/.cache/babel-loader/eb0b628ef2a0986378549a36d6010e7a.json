{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport { StereoFeedbackEffect } from \"./StereoFeedbackEffect\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Just like a [[StereoFeedbackEffect]], but the feedback is routed from left to right\n * and right to left instead of on the same channel.\n * ```\n * +--------------------------------+ feedbackL <-----------------------------------+\n * |                                                                                |\n * +-->                          +----->        +---->                          +-----+\n *      feedbackMerge +--> split        (EFFECT)       merge +--> feedbackSplit     | |\n * +-->                          +----->        +---->                          +---+ |\n * |                                                                                  |\n * +--------------------------------+ feedbackR <-------------------------------------+\n * ```\n */\n\nexport var StereoXFeedbackEffect = /*#__PURE__*/function (_StereoFeedbackEffect) {\n  _inherits(StereoXFeedbackEffect, _StereoFeedbackEffect);\n\n  function StereoXFeedbackEffect(options) {\n    var _this;\n\n    _classCallCheck(this, StereoXFeedbackEffect);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StereoXFeedbackEffect).call(this, options)); // the left output connected to the right input\n\n    _this._feedbackL.disconnect();\n\n    _this._feedbackL.connect(_this._feedbackMerge, 0, 1); // the left output connected to the right input\n\n\n    _this._feedbackR.disconnect();\n\n    _this._feedbackR.connect(_this._feedbackMerge, 0, 0);\n\n    readOnly(_assertThisInitialized(_assertThisInitialized(_this)), [\"feedback\"]);\n    return _this;\n  }\n\n  return StereoXFeedbackEffect;\n}(StereoFeedbackEffect);","map":null,"metadata":{},"sourceType":"module"}