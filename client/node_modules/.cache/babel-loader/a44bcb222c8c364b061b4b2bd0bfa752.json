{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport { Timeline } from \"./Timeline\";\nimport { Tone } from \"../Tone\";\n/**\n * Represents a single value which is gettable and settable in a timed way\n */\n\nexport var TimelineValue = /*#__PURE__*/function (_Tone) {\n  _inherits(TimelineValue, _Tone);\n\n  /**\n   * @param initialValue The value to return if there is no scheduled values\n   */\n  function TimelineValue(initialValue) {\n    var _this;\n\n    _classCallCheck(this, TimelineValue);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TimelineValue).call(this));\n    _this.name = \"TimelineValue\";\n    /**\n     * The timeline which stores the values\n     */\n\n    _this._timeline = new Timeline({\n      memory: 10\n    });\n    _this._initialValue = initialValue;\n    return _this;\n  }\n  /**\n   * Set the value at the given time\n   */\n\n\n  _createClass(TimelineValue, [{\n    key: \"set\",\n    value: function set(value, time) {\n      this._timeline.add({\n        value: value,\n        time: time\n      });\n\n      return this;\n    }\n    /**\n     * Get the value at the given time\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(time) {\n      var event = this._timeline.get(time);\n\n      if (event) {\n        return event.value;\n      } else {\n        return this._initialValue;\n      }\n    }\n  }]);\n\n  return TimelineValue;\n}(Tone);","map":null,"metadata":{},"sourceType":"module"}