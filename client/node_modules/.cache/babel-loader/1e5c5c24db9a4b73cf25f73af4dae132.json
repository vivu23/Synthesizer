{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport { Panner } from \"../component/channel/Panner\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFOEffect } from \"./LFOEffect\";\n/**\n * AutoPanner is a [[Panner]] with an [[LFO]] connected to the pan amount.\n * [Related Reading](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).\n *\n * @example\n * // create an autopanner and start it\n * const autoPanner = new Tone.AutoPanner(\"4n\").toDestination().start();\n * // route an oscillator through the panner and start it\n * const oscillator = new Tone.Oscillator().connect(autoPanner).start();\n * @category Effect\n */\n\nexport var AutoPanner = /*#__PURE__*/function (_LFOEffect) {\n  _inherits(AutoPanner, _LFOEffect);\n\n  function AutoPanner() {\n    var _this;\n\n    _classCallCheck(this, AutoPanner);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AutoPanner).call(this, optionsFromArguments(AutoPanner.getDefaults(), arguments, [\"frequency\"])));\n    _this.name = \"AutoPanner\";\n    var options = optionsFromArguments(AutoPanner.getDefaults(), arguments, [\"frequency\"]);\n    _this._panner = new Panner({\n      context: _this.context,\n      channelCount: options.channelCount\n    }); // connections\n\n    _this.connectEffect(_this._panner);\n\n    _this._lfo.connect(_this._panner.pan);\n\n    _this._lfo.min = -1;\n    _this._lfo.max = 1;\n    return _this;\n  }\n\n  _createClass(AutoPanner, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(AutoPanner.prototype), \"dispose\", this).call(this);\n\n      this._panner.dispose();\n\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(LFOEffect.getDefaults(), {\n        channelCount: 1\n      });\n    }\n  }]);\n\n  return AutoPanner;\n}(LFOEffect);","map":null,"metadata":{},"sourceType":"module"}