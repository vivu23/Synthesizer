{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport { StereoEffect } from \"./StereoEffect\";\nimport { Signal } from \"../signal/Signal\";\nimport { Gain } from \"../core/context/Gain\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Split } from \"../component/channel/Split\";\nimport { Merge } from \"../component/channel/Merge\";\n/**\n * Base class for stereo feedback effects where the effectReturn is fed back into the same channel.\n */\n\nexport var StereoFeedbackEffect = /*#__PURE__*/function (_StereoEffect) {\n  _inherits(StereoFeedbackEffect, _StereoEffect);\n\n  function StereoFeedbackEffect(options) {\n    var _this;\n\n    _classCallCheck(this, StereoFeedbackEffect);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StereoFeedbackEffect).call(this, options));\n    _this.feedback = new Signal({\n      context: _this.context,\n      value: options.feedback,\n      units: \"normalRange\"\n    });\n    _this._feedbackL = new Gain({\n      context: _this.context\n    });\n    _this._feedbackR = new Gain({\n      context: _this.context\n    });\n    _this._feedbackSplit = new Split({\n      context: _this.context,\n      channels: 2\n    });\n    _this._feedbackMerge = new Merge({\n      context: _this.context,\n      channels: 2\n    });\n\n    _this._merge.connect(_this._feedbackSplit);\n\n    _this._feedbackMerge.connect(_this._split); // the left output connected to the left input\n\n\n    _this._feedbackSplit.connect(_this._feedbackL, 0, 0);\n\n    _this._feedbackL.connect(_this._feedbackMerge, 0, 0); // the right output connected to the right input\n\n\n    _this._feedbackSplit.connect(_this._feedbackR, 1, 0);\n\n    _this._feedbackR.connect(_this._feedbackMerge, 0, 1); // the feedback control\n\n\n    _this.feedback.fan(_this._feedbackL.gain, _this._feedbackR.gain);\n\n    readOnly(_assertThisInitialized(_assertThisInitialized(_this)), [\"feedback\"]);\n    return _this;\n  }\n\n  _createClass(StereoFeedbackEffect, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(StereoFeedbackEffect.prototype), \"dispose\", this).call(this);\n\n      this.feedback.dispose();\n\n      this._feedbackL.dispose();\n\n      this._feedbackR.dispose();\n\n      this._feedbackSplit.dispose();\n\n      this._feedbackMerge.dispose();\n\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(StereoEffect.getDefaults(), {\n        feedback: 0.5\n      });\n    }\n  }]);\n\n  return StereoFeedbackEffect;\n}(StereoEffect);","map":null,"metadata":{},"sourceType":"module"}