{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Panner } from \"./Panner\";\nimport { Volume } from \"./Volume\";\n/**\n * PanVol is a Tone.Panner and Tone.Volume in one.\n * @example\n * // pan the incoming signal left and drop the volume\n * const panVol = new Tone.PanVol(-0.25, -12).toDestination();\n * const osc = new Tone.Oscillator().connect(panVol).start();\n * @category Component\n */\n\nexport var PanVol = /*#__PURE__*/function (_ToneAudioNode) {\n  _inherits(PanVol, _ToneAudioNode);\n\n  function PanVol() {\n    var _this;\n\n    _classCallCheck(this, PanVol);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PanVol).call(this, optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"])));\n    _this.name = \"PanVol\";\n    var options = optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"]);\n    _this._panner = _this.input = new Panner({\n      context: _this.context,\n      pan: options.pan,\n      channelCount: options.channelCount\n    });\n    _this.pan = _this._panner.pan;\n    _this._volume = _this.output = new Volume({\n      context: _this.context,\n      volume: options.volume\n    });\n    _this.volume = _this._volume.volume; // connections\n\n    _this._panner.connect(_this._volume);\n\n    _this.mute = options.mute;\n    readOnly(_assertThisInitialized(_assertThisInitialized(_this)), [\"pan\", \"volume\"]);\n    return _this;\n  }\n\n  _createClass(PanVol, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(PanVol.prototype), \"dispose\", this).call(this);\n\n      this._panner.dispose();\n\n      this.pan.dispose();\n\n      this._volume.dispose();\n\n      this.volume.dispose();\n      return this;\n    }\n  }, {\n    key: \"mute\",\n\n    /**\n     * Mute/unmute the volume\n     */\n    get: function get() {\n      return this._volume.mute;\n    },\n    set: function set(mute) {\n      this._volume.mute = mute;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(ToneAudioNode.getDefaults(), {\n        mute: false,\n        pan: 0,\n        volume: 0,\n        channelCount: 1\n      });\n    }\n  }]);\n\n  return PanVol;\n}(ToneAudioNode);","map":null,"metadata":{},"sourceType":"module"}