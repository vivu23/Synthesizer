{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { FeedbackCombFilter } from \"./FeedbackCombFilter\";\nimport { OnePoleFilter } from \"./OnePoleFilter\";\n/**\n * A lowpass feedback comb filter. It is similar to\n * [[FeedbackCombFilter]], but includes a lowpass filter.\n * @category Component\n */\n\nexport var LowpassCombFilter = /*#__PURE__*/function (_ToneAudioNode) {\n  _inherits(LowpassCombFilter, _ToneAudioNode);\n\n  function LowpassCombFilter() {\n    var _this;\n\n    _classCallCheck(this, LowpassCombFilter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LowpassCombFilter).call(this, optionsFromArguments(LowpassCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\", \"dampening\"])));\n    _this.name = \"LowpassCombFilter\";\n    var options = optionsFromArguments(LowpassCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\", \"dampening\"]);\n    _this._combFilter = _this.output = new FeedbackCombFilter({\n      context: _this.context,\n      delayTime: options.delayTime,\n      resonance: options.resonance\n    });\n    _this.delayTime = _this._combFilter.delayTime;\n    _this.resonance = _this._combFilter.resonance;\n    _this._lowpass = _this.input = new OnePoleFilter({\n      context: _this.context,\n      frequency: options.dampening,\n      type: \"lowpass\"\n    }); // connections\n\n    _this._lowpass.connect(_this._combFilter);\n\n    return _this;\n  }\n\n  _createClass(LowpassCombFilter, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(LowpassCombFilter.prototype), \"dispose\", this).call(this);\n\n      this._combFilter.dispose();\n\n      this._lowpass.dispose();\n\n      return this;\n    }\n  }, {\n    key: \"dampening\",\n\n    /**\n     * The dampening control of the feedback\n     */\n    get: function get() {\n      return this._lowpass.frequency;\n    },\n    set: function set(fq) {\n      this._lowpass.frequency = fq;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(ToneAudioNode.getDefaults(), {\n        dampening: 3000,\n        delayTime: 0.1,\n        resonance: 0.5\n      });\n    }\n  }]);\n\n  return LowpassCombFilter;\n}(ToneAudioNode);","map":null,"metadata":{},"sourceType":"module"}