{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Subtract } from \"./Subtract\";\nimport { Signal } from \"./Signal\";\nimport { GreaterThanZero } from \"./GreaterThanZero\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Output 1 if the signal is greater than the value, otherwise outputs 0.\n * can compare two signals or a signal and a number.\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst gt = new Tone.GreaterThan(2).toDestination();\n * \tconst sig = new Tone.Signal(4).connect(gt);\n * }, 0.1, 1);\n * @category Signal\n */\n\nexport var GreaterThan = /*#__PURE__*/function (_Signal) {\n  _inherits(GreaterThan, _Signal);\n\n  function GreaterThan() {\n    var _this;\n\n    _classCallCheck(this, GreaterThan);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GreaterThan).call(this, Object.assign(optionsFromArguments(GreaterThan.getDefaults(), arguments, [\"value\"]))));\n    _this.name = \"GreaterThan\";\n    _this.override = false;\n    var options = optionsFromArguments(GreaterThan.getDefaults(), arguments, [\"value\"]);\n    _this._subtract = _this.input = new Subtract({\n      context: _this.context,\n      value: options.value\n    });\n    _this._gtz = _this.output = new GreaterThanZero({\n      context: _this.context\n    });\n    _this.comparator = _this._param = _this._subtract.subtrahend;\n    readOnly(_assertThisInitialized(_assertThisInitialized(_this)), \"comparator\"); // connect\n\n    _this._subtract.connect(_this._gtz);\n\n    return _this;\n  }\n\n  _createClass(GreaterThan, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(GreaterThan.prototype), \"dispose\", this).call(this);\n\n      this._gtz.dispose();\n\n      this._subtract.dispose();\n\n      this.comparator.dispose();\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(Signal.getDefaults(), {\n        value: 0\n      });\n    }\n  }]);\n\n  return GreaterThan;\n}(Signal);","map":null,"metadata":{},"sourceType":"module"}