{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport { MidSideEffect } from \"../effect/MidSideEffect\";\nimport { Signal } from \"../signal/Signal\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Subtract } from \"../signal/Subtract\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { connect } from \"../core/context/ToneAudioNode\";\n/**\n * Applies a width factor to the mid/side seperation.\n * 0 is all mid and 1 is all side.\n * Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n * ```\n * Mid *= 2*(1-width)<br>\n * Side *= 2*width\n * ```\n * @category Effect\n */\n\nexport var StereoWidener = /*#__PURE__*/function (_MidSideEffect) {\n  _inherits(StereoWidener, _MidSideEffect);\n\n  function StereoWidener() {\n    var _this;\n\n    _classCallCheck(this, StereoWidener);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StereoWidener).call(this, optionsFromArguments(StereoWidener.getDefaults(), arguments, [\"width\"])));\n    _this.name = \"StereoWidener\";\n    var options = optionsFromArguments(StereoWidener.getDefaults(), arguments, [\"width\"]);\n    _this.width = new Signal({\n      context: _this.context,\n      value: options.width,\n      units: \"normalRange\"\n    });\n    readOnly(_assertThisInitialized(_assertThisInitialized(_this)), [\"width\"]);\n    _this._twoTimesWidthMid = new Multiply({\n      context: _this.context,\n      value: 2\n    });\n    _this._twoTimesWidthSide = new Multiply({\n      context: _this.context,\n      value: 2\n    });\n    _this._midMult = new Multiply({\n      context: _this.context\n    });\n\n    _this._twoTimesWidthMid.connect(_this._midMult.factor);\n\n    _this.connectEffectMid(_this._midMult);\n\n    _this._oneMinusWidth = new Subtract({\n      context: _this.context\n    });\n\n    _this._oneMinusWidth.connect(_this._twoTimesWidthMid);\n\n    connect(_this.context.getConstant(1), _this._oneMinusWidth);\n\n    _this.width.connect(_this._oneMinusWidth.subtrahend);\n\n    _this._sideMult = new Multiply({\n      context: _this.context\n    });\n\n    _this.width.connect(_this._twoTimesWidthSide);\n\n    _this._twoTimesWidthSide.connect(_this._sideMult.factor);\n\n    _this.connectEffectSide(_this._sideMult);\n\n    return _this;\n  }\n\n  _createClass(StereoWidener, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(StereoWidener.prototype), \"dispose\", this).call(this);\n\n      this.width.dispose();\n\n      this._midMult.dispose();\n\n      this._sideMult.dispose();\n\n      this._twoTimesWidthMid.dispose();\n\n      this._twoTimesWidthSide.dispose();\n\n      this._oneMinusWidth.dispose();\n\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(MidSideEffect.getDefaults(), {\n        width: 0.5\n      });\n    }\n  }]);\n\n  return StereoWidener;\n}(MidSideEffect);","map":null,"metadata":{},"sourceType":"module"}