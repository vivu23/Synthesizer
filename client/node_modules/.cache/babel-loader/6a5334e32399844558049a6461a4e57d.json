{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport { CONTEXT_STORE } from '../globals';\nexport var createMinimalBaseAudioContextConstructor = function createMinimalBaseAudioContextConstructor(audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener) {\n  return /*#__PURE__*/function (_eventTargetConstruct) {\n    _inherits(MinimalBaseAudioContext, _eventTargetConstruct);\n\n    function MinimalBaseAudioContext(_nativeContext, numberOfChannels) {\n      var _this;\n\n      _classCallCheck(this, MinimalBaseAudioContext);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(MinimalBaseAudioContext).call(this, _nativeContext));\n      _this._nativeContext = _nativeContext;\n      CONTEXT_STORE.set(_assertThisInitialized(_assertThisInitialized(_this)), _nativeContext);\n\n      if (isNativeOfflineAudioContext(_nativeContext)) {\n        unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());\n      }\n\n      _this._destination = new audioDestinationNodeConstructor(_assertThisInitialized(_assertThisInitialized(_this)), numberOfChannels);\n      _this._listener = createAudioListener(_assertThisInitialized(_assertThisInitialized(_this)), _nativeContext);\n      _this._onstatechange = null;\n      return _this;\n    }\n\n    _createClass(MinimalBaseAudioContext, [{\n      key: \"currentTime\",\n      get: function get() {\n        return this._nativeContext.currentTime;\n      }\n    }, {\n      key: \"destination\",\n      get: function get() {\n        return this._destination;\n      }\n    }, {\n      key: \"listener\",\n      get: function get() {\n        return this._listener;\n      }\n    }, {\n      key: \"onstatechange\",\n      get: function get() {\n        return this._onstatechange;\n      },\n      set: function set(value) {\n        var wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n        this._nativeContext.onstatechange = wrappedListener;\n        var nativeOnStateChange = this._nativeContext.onstatechange;\n        this._onstatechange = nativeOnStateChange !== null && nativeOnStateChange === wrappedListener ? value : nativeOnStateChange;\n      }\n    }, {\n      key: \"sampleRate\",\n      get: function get() {\n        return this._nativeContext.sampleRate;\n      }\n    }, {\n      key: \"state\",\n      get: function get() {\n        return this._nativeContext.state;\n      }\n    }]);\n\n    return MinimalBaseAudioContext;\n  }(eventTargetConstructor);\n};","map":null,"metadata":{},"sourceType":"module"}