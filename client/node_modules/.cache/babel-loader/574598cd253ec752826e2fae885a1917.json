{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\thuyv\\\\Desktop\\\\Work\\\\UTSA\\\\Senior Design\\\\Synthesizer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nexport var createAudioDestinationNodeConstructor = function createAudioDestinationNodeConstructor(audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode) {\n  return /*#__PURE__*/function (_audioNodeConstructor) {\n    _inherits(AudioDestinationNode, _audioNodeConstructor);\n\n    function AudioDestinationNode(context, channelCount) {\n      var _this;\n\n      _classCallCheck(this, AudioDestinationNode);\n\n      var nativeContext = getNativeContext(context);\n      var isOffline = isNativeOfflineAudioContext(nativeContext);\n      var nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n      var audioDestinationNodeRenderer = isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null;\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(AudioDestinationNode).call(this, context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer));\n      _this._isNodeOfNativeOfflineAudioContext = isOffline;\n      _this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n      return _this;\n    }\n\n    _createClass(AudioDestinationNode, [{\n      key: \"channelCount\",\n      get: function get() {\n        return this._nativeAudioDestinationNode.channelCount;\n      },\n      set: function set(value) {\n        // Bug #52: Chrome, Edge, Opera & Safari do not throw an exception at all.\n        // Bug #54: Firefox does throw an IndexSizeError.\n        if (this._isNodeOfNativeOfflineAudioContext) {\n          throw createInvalidStateError();\n        } // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n\n\n        if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n          throw createIndexSizeError();\n        }\n\n        this._nativeAudioDestinationNode.channelCount = value;\n      }\n    }, {\n      key: \"channelCountMode\",\n      get: function get() {\n        return this._nativeAudioDestinationNode.channelCountMode;\n      },\n      set: function set(value) {\n        // Bug #53: No browser does throw an exception yet.\n        if (this._isNodeOfNativeOfflineAudioContext) {\n          throw createInvalidStateError();\n        }\n\n        this._nativeAudioDestinationNode.channelCountMode = value;\n      }\n    }, {\n      key: \"maxChannelCount\",\n      get: function get() {\n        return this._nativeAudioDestinationNode.maxChannelCount;\n      }\n    }]);\n\n    return AudioDestinationNode;\n  }(audioNodeConstructor);\n};","map":null,"metadata":{},"sourceType":"module"}